version: "3"

services:
    hasura:
        container_name: hasura
        image: hasura/graphql-engine:v2.11.0-beta.1
        restart: unless-stopped
        ports:
            - "${HASURA_HOST_PORT}:8080"
        volumes:
          - ./hasura/metadata:/hasura-metadata
        environment:
            ## postgres database to store Hasura metadata
            HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/hasura_metadata
            HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
            ## enable the console served by server
            HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
            ## enable debugging mode. It is recommended to disable this in production
            HASURA_GRAPHQL_DEV_MODE: "true"
            HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
            HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS384", "key": "${DEV_JWT_SECRET}"}'
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
            HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
            HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: 'true'
            NESTJS_BASE_URL: ${NESTJS_BASE_URL}
            NESTJS_EVENT_WEBHOOK_ENDPOINT: ${NESTJS_BASE_URL}/hasura/events
            NESTJS_EVENT_WEBHOOK_SHARED_SECRET: ${NESTJS_EVENT_WEBHOOK_SHARED_SECRET}
            HASURA_GRAPHQL_MIGRATIONS_SERVER_TIMEOUT: 30
            HASURA_GRAPHQL_NO_OF_RETRIES: 10
        networks:
            - internal
            - monorepo-network
 
networks:
  internal:
    external: false
  monorepo-network:
    external: true