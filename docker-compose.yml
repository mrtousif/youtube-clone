version: "3"

volumes:
    postgres_data:
        driver: local

services:
    postgres:
        image: postgres:14-alpine
        restart: unless-stopped
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init/db:/docker-entrypoint-initdb.d/
        command: postgres -c wal_level=logical
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    # realtime:
    #     image: supabase/realtime:latest
    #     ports:
    #         - "8000:4000"
    #     environment:
    #         DB_HOST: postgres
    #         DB_NAME: ${POSTGRES_DB}
    #         DB_USER: ${POSTGRES_USER}
    #         DB_PASSWORD: ${POSTGRES_PASSWORD}
    #         DB_PORT: 5432
    #         PORT: 4000
    #         JWT_SECRET: SOMETHING_SUPER_SECRET
    #         SECURE_CHANNELS: 'false'
    #     depends_on:
    #         - postgres

    pgweb:
        image: sosedoff/pgweb:latest
        restart: unless-stopped
        ports:
            - "8081:8081"
        environment:
            - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
        depends_on:
            - postgres
    keycloak:
        image: bitnami/keycloak:18.0.2
        container_name: keycloak
        environment:
            DB_VENDOR: POSTGRES
            DB_ADDR: postgres
            DB_DATABASE: keycloak_db
            DB_USER: keycloak
            DB_PASSWORD: password
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: password123
            PROXY_ADDRESS_FORWARDING: "true"
        ports:
            - 8083:8080
        depends_on:
            - postgres


    redis:
        image: redis:7-alpine
        hostname: redis
        restart: unless-stopped
        ports:
            - "6379:6379"

    redis-commander:
        container_name: redis-commander
        hostname: redis-commander
        image: ghcr.io/joeferner/redis-commander:latest
        restart: unless-stopped
        environment:
            - REDIS_HOSTS=local:redis:6379
        ports:
            - "8084:8081"
        depends_on:
            - redis
    maildev:
        image: maildev/maildev
        ports:
            - "1080:1080"
            - "1025:1025"

    nats:
        image: nats:alpine
        ports:
            - "4222:4222"
            - "8222:8222"
        command: [ "-js", "-m", "8222" ]
        # networks:
        #     - nats
    nats-ui:
        image: piotrpersona/nats-streaming-ui:latest
        ports:
            - "8085:8282"
        depends_on:
            - nats
        environment:
            STAN_URL: http://nats:4222
            STAN_MONITOR_URL: http://nats:8222
            STAN_CLUSTER: test-cluster
        # networks:
        #     - nats

networks:
  default:
    name: "monorepo-network"
